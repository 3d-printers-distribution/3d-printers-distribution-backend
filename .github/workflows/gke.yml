# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs
# 1. Set up secrets in your workspace: GKE_PROJECT with the name of the project,
#    SA_EMAIL with the service account email, GOOGLE_APPLICATION_CREDENTIALS with
#    the Base64 encoded JSON service account key.
#
# 2. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dev
  GKE_ZONE: us-central1-c
  IMAGE: threedprintingservice

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@master

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.SA_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker
      # Build the Docker image
      - name: Build
        run: |
          docker build -t gcr.io/$GKE_PROJECT/$IMAGE:$GITHUB_SHA \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push gcr.io/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
      # Set up kustomize
      - name: Set up Kustomize
        run: |
          curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER \
            --zone $GKE_ZONE --project $GKE_PROJECT
          kubectl set image deployment/api threedprintingservice=gcr.io/$GKE_PROJECT/$IMAGE:$GITHUB_SHA -n=default